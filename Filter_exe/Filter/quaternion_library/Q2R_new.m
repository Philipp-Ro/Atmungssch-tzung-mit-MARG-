function R = Q2R_new(q)
    %% Quaternion normieren
    Z = sqrt(q(:,1).^2 + q(:,2).^2 + q(:,3).^2 + q(:,4).^2);
    q = [q(:,1)./Z q(:,2)./Z q(:,3)./Z q(:,4)./Z];

    R(1,1,:) = 1-2*(q(:,3)^2 + q(:,4)^2);           %qz(:,1).^2 + qz(:,2).^2 - qz(:,3).^2 - qz(:,4).^2;
    R(1,2,:) = 2*(q(:,2)*q(:,3) - q(:,1)*q(:,4));   %2.*( qz(:,2).*qz(:,3) - qz(:,1).*qz(:,4) );
    R(1,3,:) = 2*(q(:,2)*q(:,4) + q(:,1)*q(:,3));   %2.*( qz(:,2).*qz(:,4) + qz(:,1).*qz(:,3) );
    
    R(2,1,:) = 2*(q(:,2)*q(:,3) + q(:,1)*q(:,4));   %2.*( qz(:,2).*qz(:,3) + qz(:,1).*qz(:,4) );
    R(2,2,:) = 1-2*(q(:,4)^2 + q(:,2)^2);           %qz(:,1).^2 - qz(:,2).^2 + qz(:,3).^2 - qz(:,4).^2;
    R(2,3,:) = 2*(q(:,3)*q(:,4) - q(:,1)*q(:,2));   %2.*( qz(:,3).*qz(:,4) - qz(:,1).*qz(:,2) );
    
    R(3,1,:) = 2*(q(:,2)*q(:,4) - q(:,1)*q(:,3));   %2.*( qz(:,2).*qz(:,4) - qz(:,1).*qz(:,3) );
    R(3,2,:) = 2*(q(:,3)*q(:,4) + q(:,1)*q(:,2));   %2.*( qz(:,3).*qz(:,4) + qz(:,1).*qz(:,2) );
    R(3,3,:) = 1-2*(q(:,2)^2 + q(:,3)^2);           %qz(:,1).^2 - qz(:,2).^2 - qz(:,3).^2 + qz(:,4).^2;
end